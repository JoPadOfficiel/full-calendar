{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "responsive-modal",
  "type": "registry:component",
  "title": "Responsive modal",
  "description": "A modal that pops up in the center of the screen on desktop and slide up on mobile",
  "registryDependencies": [
    "avatar"
  ],
  "files": [
    {
      "path": "src/components/ui/responsive-modal.tsx",
      "content": "'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { X } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport {HTMLAttributes} from \"react\";\n\nconst ResponsiveModal = DialogPrimitive.Root;\nconst ResponsiveModalTrigger = DialogPrimitive.Trigger;\nconst ResponsiveModalClose = DialogPrimitive.Close;\nconst ResponsiveModalPortal = DialogPrimitive.Portal;\n\nconst ResponsiveModalOverlay = (props: DialogPrimitive.DialogOverlayProps) => {\n    return (\n        <DialogPrimitive.Overlay\n            {...props}\n            className={cn(\n                'fixed inset-0 z-50 bg-background/80 backdrop-blur-sm',\n                'data-[state=open]:animate-in data-[state=closed]:animate-out',\n                'data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n                props.className\n            )}\n        />\n    );\n};\n\nconst ResponsiveModalVariants = cva(\n    cn(\n        'fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out',\n        'data-[state=open]:animate-in data-[state=closed]:animate-out',\n        'data-[state=closed]:duration-300 data-[state=open]:duration-500 overflow-y-auto',\n        'lg:left-[50%] lg:top-[50%] lg:w-full lg:max-w-lg lg:translate-x-[-50%] lg:translate-y-[-50%]',\n        'lg:border lg:duration-200 lg:data-[state=open]:animate-in lg:data-[state=closed]:animate-out',\n        'lg:data-[state=closed]:fade-out-0 lg:data-[state=open]:fade-in-0',\n        'lg:data-[state=closed]:zoom-out-95 lg:data-[state=open]:zoom-in-95 lg:rounded-xl'\n    ),\n    {\n        variants: {\n            side: {\n                top: 'inset-x-0 top-0 border-b rounded-b-xl max-h-[80dvh] lg:h-fit data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top',\n                bottom:\n                    'inset-x-0 bottom-0 border-t lg:h-fit max-h-[80dvh] rounded-t-xl data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom',\n                left: 'inset-y-0 left-0 h-full lg:h-fit w-3/4 border-r rounded-r-xl data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm',\n                right:\n                    'inset-y-0 right-0 h-full lg:h-fit w-3/4 border-l rounded-l-xl data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm',\n            },\n        },\n        defaultVariants: {\n            side: 'bottom',\n        },\n    }\n);\n\ntype ResponsiveModalContentProps = DialogPrimitive.DialogContentProps &\n    VariantProps<typeof ResponsiveModalVariants>;\n\nconst ResponsiveModalContent = ({\n                                    side = 'bottom',\n                                    className,\n                                    children,\n                                    ...props\n                                }: ResponsiveModalContentProps) => {\n    return (\n        <ResponsiveModalPortal>\n            <ResponsiveModalOverlay />\n            <DialogPrimitive.Content\n                {...props}\n                aria-describedby='responsive-modal-description'\n                className={cn(ResponsiveModalVariants({ side }), className)}\n            >\n                {children}\n                <ResponsiveModalClose className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n                    <X className=\"h-4 w-4\" />\n                    <span className=\"sr-only\">Close</span>\n                </ResponsiveModalClose>\n            </DialogPrimitive.Content>\n        </ResponsiveModalPortal>\n    );\n};\n\nconst ResponsiveModalHeader = (props: HTMLAttributes<HTMLDivElement>) => (\n    <div\n        {...props}\n        className={cn('flex flex-col space-y-2 text-center sm:text-left', props.className)}\n    />\n);\n\nconst ResponsiveModalFooter = (props: HTMLAttributes<HTMLDivElement>) => (\n    <div\n        {...props}\n        className={cn(\n            'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n            props.className\n        )}\n    />\n);\n\nconst ResponsiveModalTitle = (props: DialogPrimitive.DialogTitleProps) => (\n    <DialogPrimitive.Title\n        {...props}\n        className={cn('text-lg font-semibold text-foreground', props.className)}\n    />\n);\n\nconst ResponsiveModalDescription = (props: DialogPrimitive.DialogDescriptionProps) => (\n    <DialogPrimitive.Description\n        {...props}\n        className={cn('text-sm text-muted-foreground', props.className)}\n    />\n);\n\nexport {\n    ResponsiveModal,\n    ResponsiveModalPortal,\n    ResponsiveModalOverlay,\n    ResponsiveModalTrigger,\n    ResponsiveModalClose,\n    ResponsiveModalContent,\n    ResponsiveModalHeader,\n    ResponsiveModalFooter,\n    ResponsiveModalTitle,\n    ResponsiveModalDescription,\n};\n",
      "type": "registry:component"
    }
  ]
}