{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "day-picker",
  "type": "registry:component",
  "title": "Day Picker",
  "description": "A component for selecting a single day from a calendar.",
  "dependencies": [
    "react-day-picker",
    "date-fns",
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "src/components/ui/day-picker.tsx",
      "content": "\"use client\";\n\nimport { enUS } from \"date-fns/locale\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { DayPicker as ReactDayPicker } from \"react-day-picker\";\n\nimport { buttonVariants } from \"@/components/ui/button\";\n\nimport {cn} from \"@/lib/utils\";\n\nimport type { ComponentProps } from \"react\";\nimport type { CustomComponents } from \"react-day-picker\";\n\n\ntype TDayPickerProps = ComponentProps<typeof ReactDayPicker>;\n\nfunction DayPicker({ className, classNames, showOutsideDays = true, ...props }: TDayPickerProps) {\n  return (\n    <ReactDayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col select-none sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n\n        caption: \"flex justify-center pt-1 relative items-center capitalize\",\n        caption_label: \"text-sm font-medium\",\n\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(buttonVariants({ variant: \"outline\" }), \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        head_row: \"flex\",\n        head_cell: \"w-9 font-medium text-sm capitalize\",\n        row: \"flex w-full mt-2\",\n\n        cell: cn(\n          \"size-9 flex items-center justify-center text-t-secondary text-center text-sm p-0 relative focus-within:relative focus-within:z-20\",\n          \"[&:has([aria-selected].day-range-end)]:rounded-r-lg last:[&:has([aria-selected])]:rounded-r-lg first:[&:has([aria-selected])]:rounded-l-lg [&:has([aria-selected])]:bg-bg-secondary\"\n        ),\n        day: cn(buttonVariants({ variant: \"ghost\" }), \"size-8.5 p-0 font-normal aria-selected:opacity-100\"),\n        day_selected: \"bg-primary text-white dark:text-black dark:hover:!text-white\",\n        day_today: \"text-red-600\",\n        day_outside: \"opacity-50 aria-selected:opacity-40\",\n        day_range_middle: \"aria-selected:bg-bg-secondary aria-selected:text-t-primary\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={\n        {\n          IconLeft: () => <ChevronLeft className=\"size-4\" />,\n          IconRight: () => <ChevronRight className=\"size-4\" />,\n        } as Partial<CustomComponents>\n      }\n      locale={enUS}\n      {...props}\n    />\n  );\n}\n\n\nexport { DayPicker };\n",
      "type": "registry:component"
    }
  ]
}