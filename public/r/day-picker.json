{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "day-picker",
  "type": "registry:component",
  "title": "Day Picker",
  "description": "A component for selecting a single day from a calendar.",
  "dependencies": [
    "date-fns",
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "src/components/ui/day-picker.tsx",
      "content": "\"use client\";\n\nimport { enUS } from \"date-fns/locale\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport type { ComponentProps } from \"react\";\nimport type { CustomComponents } from \"react-day-picker\";\nimport { DayPicker as ReactDayPicker } from \"react-day-picker\";\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\ntype TDayPickerProps = ComponentProps<typeof ReactDayPicker>;\n\nfunction DayPicker({\n\tclassName,\n\tclassNames,\n\tshowOutsideDays = true,\n\t...props\n}: TDayPickerProps) {\n\treturn (\n\t\t<ReactDayPicker\n\t\t\tshowOutsideDays={showOutsideDays}\n\t\t\tclassName={cn(\"p-3\", className)}\n\t\t\tclassNames={{\n\t\t\t\tmonths:\n\t\t\t\t\t\"flex flex-col select-none sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n\t\t\t\tmonth: \"space-y-4\",\n\n\t\t\t\tcaption: \"flex justify-center pt-1 relative items-center capitalize\",\n\t\t\t\tcaption_label: \"text-sm font-medium\",\n\n\t\t\t\tnav: \"space-x-1 flex items-center\",\n\t\t\t\tnav_button: cn(\n\t\t\t\t\tbuttonVariants({ variant: \"outline\" }),\n\t\t\t\t\t\"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n\t\t\t\t),\n\t\t\t\tnav_button_previous: \"absolute left-1\",\n\t\t\t\tnav_button_next: \"absolute right-1\",\n\t\t\t\thead_row: \"flex\",\n\t\t\t\thead_cell: \"w-9 font-medium text-sm capitalize\",\n\t\t\t\trow: \"flex w-full mt-2\",\n\n\t\t\t\tcell: cn(\n\t\t\t\t\t\"size-9 flex items-center justify-center text-t-secondary text-center text-sm p-0 relative focus-within:relative focus-within:z-20\",\n\t\t\t\t\t\"[&:has([aria-selected].day-range-end)]:rounded-r-lg last:[&:has([aria-selected])]:rounded-r-lg first:[&:has([aria-selected])]:rounded-l-lg [&:has([aria-selected])]:bg-bg-secondary\",\n\t\t\t\t),\n\t\t\t\tday: cn(\n\t\t\t\t\tbuttonVariants({ variant: \"ghost\" }),\n\t\t\t\t\t\"size-8.5 p-0 font-normal aria-selected:opacity-100\",\n\t\t\t\t),\n\t\t\t\tday_selected:\n\t\t\t\t\t\"bg-primary text-white dark:text-black dark:hover:!text-white\",\n\t\t\t\tday_today: \"text-red-600\",\n\t\t\t\tday_outside: \"opacity-50 aria-selected:opacity-40\",\n\t\t\t\tday_range_middle:\n\t\t\t\t\t\"aria-selected:bg-bg-secondary aria-selected:text-t-primary\",\n\t\t\t\tday_hidden: \"invisible\",\n\t\t\t\t...classNames,\n\t\t\t}}\n\t\t\tcomponents={\n\t\t\t\t{\n\t\t\t\t\tIconLeft: () => <ChevronLeft className=\"size-4\" />,\n\t\t\t\t\tIconRight: () => <ChevronRight className=\"size-4\" />,\n\t\t\t\t} as Partial<CustomComponents>\n\t\t\t}\n\t\t\tlocale={enUS}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport { DayPicker };\n",
      "type": "registry:component"
    }
  ]
}